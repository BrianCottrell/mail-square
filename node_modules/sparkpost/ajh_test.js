// NODE SDK Test Key
// e2e1b620ff9cf2db919d3c40160c4851d445d454

/*
 var key = 'e2e1b620ff9cf2db919d3c40160c4851d445d454'//'YOURAPIKEY'
 , SparkPost = require('../../lib/sparkpost')//require('sparkpost')
 */

var SparkPost = require('./lib/sparkpost');
 client = new SparkPost('e2e1b620ff9cf2db919d3c40160c4851d445d454');

/**
 * Test Sending Domains
 */
/*
client.sendingDomains.all(function(err, res) {
  if (err) {
    throw err;
  }
  console.log(res.body);
});
*/

/**
 * Test Transmissions
 */

var trans = {
  campaign: 'test-campaign',
  substitutionData: {
    name: 'Test Name'
  },
  description: 'test email',
  replyTo: 'hello@aydrian.me',
  trackOpens: true,
  trackClicks: true,
  from: 'Aydrian <hello@aydrian.me>',
  html: '<p>Hello World! Your name is: {{name}}</p>',
  text: 'Hello World!',
  subject: 'Example Email for All Fields',
  to: [
    {
      address: {
        email: 'aydrian@gmail.com'
      }
    }
  ]
};

client.transmissions.send({transmissionBody: trans }, function(err, res) {
  if (err) {
    console.log(err);
    return;
  } else {
    console.log(res.res.statusCode);
    console.log(res.body);
    console.log('Congrats you can use our SDK!');
  }
});
/*
var sinon = require('sinon');
var request = require('request');

// initializing sinon fakeServer
var server = sinon.fakeServer.create();
console.log('running');
// fake server answers are queued and not returned automatically unless autoRespond set to true
server.autoRespond = true;
// setting some custom response
server.respondWith("GET", "/some/path/to/data.json",
  [200, { "Content-Type": "application/json" },
    '[{ "id": 12, "comment": "Hey there" }]']);
// make an ajax call

var reqOpts = {
  method: 'GET',
  uri: "/some/path/to/data.json"
};

request(reqOpts, function(error, response, body) {
  if (error) {
    console.log(error + "!!!");
    return;
  }
  console.log('Hurray! Our data has arrived:', body);
});

// rollback default XHR object
server.restore();
*/
